#ifndef _ORIGINALS_H_INCLUDED
#define _ORIGINALS_H_INCLUDED
#include "coretypes.h"

class Originals
{
    public:
        static void initialize();
        static volatile bool is_initialized();

        static int sem_wait(sem_t *);
        static int pthread_mutex_lock(pthread_mutex_t *);
        static unsigned int sleep(unsigned int);
        static int pthread_condattr_destroy(pthread_condattr_t *);
        static int pthread_mutexattr_getpshared(const pthread_mutexattr_t *, int *);
        static int pthread_setconcurrency(int);
        static int pthread_getconcurrency();
        static int sem_destroy(sem_t *);
        static void pthread_testcancel();
        static int pthread_attr_getscope(const pthread_attr_t *, int *);
        static int pthread_mutex_init(pthread_mutex_t *, const pthread_mutexattr_t *);
        static int sem_init(sem_t *, int, unsigned int);
        static int pthread_mutex_trylock(pthread_mutex_t *);
        static int pthread_rwlockattr_init(pthread_rwlockattr_t *);
        static int pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);
        static int pthread_rwlockattr_destroy(pthread_rwlockattr_t *);
        static int pthread_barrier_destroy(pthread_barrier_t *);
        static int pthread_getschedparam(pthread_t, int *, struct sched_param *);
        static int pthread_attr_getschedparam(const pthread_attr_t *, struct sched_param *);
        static int pthread_cancel(pthread_t);
        static int pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);
        static int pthread_condattr_getpshared(const pthread_condattr_t *, int *);
        static int pthread_spin_trylock(pthread_spinlock_t *);
        static int pthread_attr_getinheritsched(const pthread_attr_t *, int *);
        static int pthread_attr_setstack(pthread_attr_t *, void *, size_t);
        static int pthread_cond_signal(pthread_cond_t *);
        static int sem_getvalue(sem_t *, int *);
        static int pthread_mutexattr_init(pthread_mutexattr_t *);
        static int pthread_barrier_wait(pthread_barrier_t *);
        static int pthread_spin_destroy(pthread_spinlock_t *);
        static int pthread_key_delete(pthread_key_t);
        static int pthread_setspecific(pthread_key_t, const void *);
        static int pthread_attr_setstacksize(pthread_attr_t *, size_t);
        static int pthread_setcancelstate(int, int *);
        static int pthread_barrierattr_setpshared(pthread_barrierattr_t *, int);
        static int pthread_rwlock_timedrdlock(pthread_rwlock_t *, const struct timespec *);
        static int pthread_detach(pthread_t);
        static int usleep(useconds_t);
        static int pthread_rwlock_destroy(pthread_rwlock_t *);
        static void pthread_exit(void *);
        static int pthread_attr_setdetachstate(pthread_attr_t *, int);
        static int pthread_rwlock_trywrlock(pthread_rwlock_t *);
        static int pthread_attr_init(pthread_attr_t *);
        static int pthread_attr_setguardsize(pthread_attr_t *, size_t);
        static int pthread_condattr_setpshared(pthread_condattr_t *, int);
        static int pthread_mutex_setprioceiling(pthread_mutex_t *, int, int *);
        static int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *, int *);
        static int pthread_attr_getstack(const pthread_attr_t *, void **, size_t *);
        static int pthread_condattr_init(pthread_condattr_t *);
        static int pthread_mutexattr_gettype(const pthread_mutexattr_t *, int *);
        static int sem_post(sem_t *);
        static int pthread_attr_getstacksize(const pthread_attr_t *, size_t *);
        static int pthread_create(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *);
        static int sem_timedwait(sem_t *, const struct timespec *);
        static int pthread_equal(pthread_t, pthread_t);
        static int pthread_spin_init(pthread_spinlock_t *, int);
        static int sched_yield();
        static int pthread_key_create(pthread_key_t *, void (*)(void *));
        static int pthread_mutexattr_destroy(pthread_mutexattr_t *);
        static int pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *, const struct timespec *);
        static int pthread_condattr_getclock(const pthread_condattr_t *, clockid_t *);
        static int pthread_setschedparam(pthread_t, int, const struct sched_param *);
        static int pthread_attr_setinheritsched(pthread_attr_t *, int);
        static int pthread_mutex_unlock(pthread_mutex_t *);
        static int pthread_attr_setschedparam(pthread_attr_t *, const struct sched_param *);
        static int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, int);
        static int pthread_attr_setstackaddr(pthread_attr_t *, void *);
        static int pthread_mutex_destroy(pthread_mutex_t *);
        static int pthread_attr_getschedpolicy(const pthread_attr_t *, int *);
        static int pthread_setcanceltype(int, int *);
        static int sigwait(const sigset_t *, int *);
        static int pthread_rwlock_init(pthread_rwlock_t *, const pthread_rwlockattr_t *);
        static int pthread_rwlock_unlock(pthread_rwlock_t *);
        static int pthread_mutexattr_setprotocol(pthread_mutexattr_t *, int);
        static int pthread_mutex_getprioceiling(const pthread_mutex_t *, int *);
        static int sem_trywait(sem_t *);
        static int pthread_attr_getstackaddr(const pthread_attr_t *, void **);
        static int pthread_mutexattr_settype(pthread_mutexattr_t *, int);
        static int pthread_getcpuclockid(pthread_t, clockid_t *);
        static int pthread_cond_destroy(pthread_cond_t *);
        static int pthread_spin_lock(pthread_spinlock_t *);
        static int pthread_once(pthread_once_t *, void (*)(void));
        static int pthread_atfork(void (*)(void), void (*)(void), void(*)(void));
        static int pthread_attr_setscope(pthread_attr_t *, int);
        static void * pthread_getspecific(pthread_key_t);
        static int pthread_attr_destroy(pthread_attr_t *);
        static int pthread_mutex_timedlock(pthread_mutex_t *, const struct timespec *);
        static int pthread_barrier_init(pthread_barrier_t *, const pthread_barrierattr_t *, unsigned);
        static int pthread_setschedprio(pthread_t, int);
        static int pthread_condattr_setclock(pthread_condattr_t *, clockid_t);
        static int pthread_cond_broadcast(pthread_cond_t *);
        static int pthread_spin_unlock(pthread_spinlock_t *);
        static int pthread_rwlock_rdlock(pthread_rwlock_t *);
        static int pthread_rwlock_wrlock(pthread_rwlock_t *);
        static int pthread_join(pthread_t, void **);
        static int pthread_cond_init(pthread_cond_t *, const pthread_condattr_t *);
        static int pthread_attr_getguardsize(const pthread_attr_t *, size_t *);
        static int pthread_barrierattr_init(pthread_barrierattr_t *);
        static int pthread_rwlock_tryrdlock(pthread_rwlock_t *);
        static int pthread_attr_setschedpolicy(pthread_attr_t *, int);
        static int pthread_barrierattr_destroy(pthread_barrierattr_t *);
        static pthread_t pthread_self();
        static int pthread_attr_getdetachstate(const pthread_attr_t *, int *);
        static int pthread_rwlock_timedwrlock(pthread_rwlock_t *, const struct timespec *);
        static int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int);


    private:
        static void _initialize();
        static volatile bool _initialized;

        static int (* volatile _sem_wait) (sem_t *);
        static int (* volatile _pthread_mutex_lock) (pthread_mutex_t *);
        static unsigned int (* volatile _sleep) (unsigned int);
        static int (* volatile _pthread_condattr_destroy) (pthread_condattr_t *);
        static int (* volatile _pthread_mutexattr_getpshared) (const pthread_mutexattr_t *, int *);
        static int (* volatile _pthread_setconcurrency) (int);
        static int (* volatile _pthread_getconcurrency) ();
        static int (* volatile _sem_destroy) (sem_t *);
        static void (* volatile _pthread_testcancel) ();
        static int (* volatile _pthread_attr_getscope) (const pthread_attr_t *, int *);
        static int (* volatile _pthread_mutex_init) (pthread_mutex_t *, const pthread_mutexattr_t *);
        static int (* volatile _sem_init) (sem_t *, int, unsigned int);
        static int (* volatile _pthread_mutex_trylock) (pthread_mutex_t *);
        static int (* volatile _pthread_rwlockattr_init) (pthread_rwlockattr_t *);
        static int (* volatile _pthread_mutexattr_setpshared) (pthread_mutexattr_t *, int);
        static int (* volatile _pthread_rwlockattr_destroy) (pthread_rwlockattr_t *);
        static int (* volatile _pthread_barrier_destroy) (pthread_barrier_t *);
        static int (* volatile _pthread_getschedparam) (pthread_t, int *, struct sched_param *);
        static int (* volatile _pthread_attr_getschedparam) (const pthread_attr_t *, struct sched_param *);
        static int (* volatile _pthread_cancel) (pthread_t);
        static int (* volatile _pthread_cond_wait) (pthread_cond_t *, pthread_mutex_t *);
        static int (* volatile _pthread_condattr_getpshared) (const pthread_condattr_t *, int *);
        static int (* volatile _pthread_spin_trylock) (pthread_spinlock_t *);
        static int (* volatile _pthread_attr_getinheritsched) (const pthread_attr_t *, int *);
        static int (* volatile _pthread_attr_setstack) (pthread_attr_t *, void *, size_t);
        static int (* volatile _pthread_cond_signal) (pthread_cond_t *);
        static int (* volatile _sem_getvalue) (sem_t *, int *);
        static int (* volatile _pthread_mutexattr_init) (pthread_mutexattr_t *);
        static int (* volatile _pthread_barrier_wait) (pthread_barrier_t *);
        static int (* volatile _pthread_spin_destroy) (pthread_spinlock_t *);
        static int (* volatile _pthread_key_delete) (pthread_key_t);
        static int (* volatile _pthread_setspecific) (pthread_key_t, const void *);
        static int (* volatile _pthread_attr_setstacksize) (pthread_attr_t *, size_t);
        static int (* volatile _pthread_setcancelstate) (int, int *);
        static int (* volatile _pthread_barrierattr_setpshared) (pthread_barrierattr_t *, int);
        static int (* volatile _pthread_rwlock_timedrdlock) (pthread_rwlock_t *, const struct timespec *);
        static int (* volatile _pthread_detach) (pthread_t);
        static int (* volatile _usleep) (useconds_t);
        static int (* volatile _pthread_rwlock_destroy) (pthread_rwlock_t *);
        static void (* volatile _pthread_exit) (void *);
        static int (* volatile _pthread_attr_setdetachstate) (pthread_attr_t *, int);
        static int (* volatile _pthread_rwlock_trywrlock) (pthread_rwlock_t *);
        static int (* volatile _pthread_attr_init) (pthread_attr_t *);
        static int (* volatile _pthread_attr_setguardsize) (pthread_attr_t *, size_t);
        static int (* volatile _pthread_condattr_setpshared) (pthread_condattr_t *, int);
        static int (* volatile _pthread_mutex_setprioceiling) (pthread_mutex_t *, int, int *);
        static int (* volatile _pthread_mutexattr_getprotocol) (const pthread_mutexattr_t *, int *);
        static int (* volatile _pthread_attr_getstack) (const pthread_attr_t *, void **, size_t *);
        static int (* volatile _pthread_condattr_init) (pthread_condattr_t *);
        static int (* volatile _pthread_mutexattr_gettype) (const pthread_mutexattr_t *, int *);
        static int (* volatile _sem_post) (sem_t *);
        static int (* volatile _pthread_attr_getstacksize) (const pthread_attr_t *, size_t *);
        static int (* volatile _pthread_create) (pthread_t *, const pthread_attr_t *, void *(*)(void *), void *);
        static int (* volatile _sem_timedwait) (sem_t *, const struct timespec *);
        static int (* volatile _pthread_equal) (pthread_t, pthread_t);
        static int (* volatile _pthread_spin_init) (pthread_spinlock_t *, int);
        static int (* volatile _sched_yield) ();
        static int (* volatile _pthread_key_create) (pthread_key_t *, void (*)(void *));
        static int (* volatile _pthread_mutexattr_destroy) (pthread_mutexattr_t *);
        static int (* volatile _pthread_cond_timedwait) (pthread_cond_t *, pthread_mutex_t *, const struct timespec *);
        static int (* volatile _pthread_condattr_getclock) (const pthread_condattr_t *, clockid_t *);
        static int (* volatile _pthread_setschedparam) (pthread_t, int, const struct sched_param *);
        static int (* volatile _pthread_attr_setinheritsched) (pthread_attr_t *, int);
        static int (* volatile _pthread_mutex_unlock) (pthread_mutex_t *);
        static int (* volatile _pthread_attr_setschedparam) (pthread_attr_t *, const struct sched_param *);
        static int (* volatile _pthread_rwlockattr_setpshared) (pthread_rwlockattr_t *, int);
        static int (* volatile _pthread_attr_setstackaddr) (pthread_attr_t *, void *);
        static int (* volatile _pthread_mutex_destroy) (pthread_mutex_t *);
        static int (* volatile _pthread_attr_getschedpolicy) (const pthread_attr_t *, int *);
        static int (* volatile _pthread_setcanceltype) (int, int *);
        static int (* volatile _sigwait) (const sigset_t *, int *);
        static int (* volatile _pthread_rwlock_init) (pthread_rwlock_t *, const pthread_rwlockattr_t *);
        static int (* volatile _pthread_rwlock_unlock) (pthread_rwlock_t *);
        static int (* volatile _pthread_mutexattr_setprotocol) (pthread_mutexattr_t *, int);
        static int (* volatile _pthread_mutex_getprioceiling) (const pthread_mutex_t *, int *);
        static int (* volatile _sem_trywait) (sem_t *);
        static int (* volatile _pthread_attr_getstackaddr) (const pthread_attr_t *, void **);
        static int (* volatile _pthread_mutexattr_settype) (pthread_mutexattr_t *, int);
        static int (* volatile _pthread_getcpuclockid) (pthread_t, clockid_t *);
        static int (* volatile _pthread_cond_destroy) (pthread_cond_t *);
        static int (* volatile _pthread_spin_lock) (pthread_spinlock_t *);
        static int (* volatile _pthread_once) (pthread_once_t *, void (*)(void));
        static int (* volatile _pthread_atfork) (void (*)(void), void (*)(void), void(*)(void));
        static int (* volatile _pthread_attr_setscope) (pthread_attr_t *, int);
        static void * (* volatile _pthread_getspecific) (pthread_key_t);
        static int (* volatile _pthread_attr_destroy) (pthread_attr_t *);
        static int (* volatile _pthread_mutex_timedlock) (pthread_mutex_t *, const struct timespec *);
        static int (* volatile _pthread_barrier_init) (pthread_barrier_t *, const pthread_barrierattr_t *, unsigned);
        static int (* volatile _pthread_setschedprio) (pthread_t, int);
        static int (* volatile _pthread_condattr_setclock) (pthread_condattr_t *, clockid_t);
        static int (* volatile _pthread_cond_broadcast) (pthread_cond_t *);
        static int (* volatile _pthread_spin_unlock) (pthread_spinlock_t *);
        static int (* volatile _pthread_rwlock_rdlock) (pthread_rwlock_t *);
        static int (* volatile _pthread_rwlock_wrlock) (pthread_rwlock_t *);
        static int (* volatile _pthread_join) (pthread_t, void **);
        static int (* volatile _pthread_cond_init) (pthread_cond_t *, const pthread_condattr_t *);
        static int (* volatile _pthread_attr_getguardsize) (const pthread_attr_t *, size_t *);
        static int (* volatile _pthread_barrierattr_init) (pthread_barrierattr_t *);
        static int (* volatile _pthread_rwlock_tryrdlock) (pthread_rwlock_t *);
        static int (* volatile _pthread_attr_setschedpolicy) (pthread_attr_t *, int);
        static int (* volatile _pthread_barrierattr_destroy) (pthread_barrierattr_t *);
        static pthread_t (* volatile _pthread_self) ();
        static int (* volatile _pthread_attr_getdetachstate) (const pthread_attr_t *, int *);
        static int (* volatile _pthread_rwlock_timedwrlock) (pthread_rwlock_t *, const struct timespec *);
        static int (* volatile _pthread_mutexattr_setprioceiling) (pthread_mutexattr_t *, int);

};

#endif 
